"""update reminders

Revision ID: 2c7579d11c8f
Revises: 33a33b6314d5
Create Date: 2025-08-15 12:02:56.760454

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlmodel.sql.sqltypes import AutoString

# revision identifiers, used by Alembic.
revision: str = "2c7579d11c8f"
down_revision: Union[str, None] = "33a33b6314d5"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

# REMIDNER_TODO: make status col nullable at first, backfill, then set to non nullable


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("reminder", sa.Column("status", AutoString(), nullable=False))
    op.add_column("reminder", sa.Column("closing_comment", AutoString(), nullable=True))
    op.drop_constraint("reminder_user_id_name_is_active_key", "reminder", type_="unique")
    op.create_unique_constraint(None, "reminder", ["user_id", "name", "is_active", "trigger_datetime", "status", "reminder_context"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "reminder", type_="unique")  # type: ignore
    op.create_unique_constraint("reminder_user_id_name_is_active_key", "reminder", ["user_id", "name", "is_active"])
    op.drop_column("reminder", "closing_comment")
    op.drop_column("reminder", "status")
    # ### end Alembic commands ###
