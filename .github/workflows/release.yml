name: Create and Publish Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      packages: write
      id-token: write
    services:
      postgres:
        image: ankane/pgvector:v0.5.1
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: elroy
          POSTGRES_USER: elroy
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    environment:
      name: release

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Set env variables
      run: |
        echo "ELROY_TEST_POSTGRES_URL=postgresql://elroy:password@localhost:5432/elroy" >> $GITHUB_ENV
        echo "ELROY_POSTGRES_URL=postgresql://elroy:password@localhost:5432/elroy" >> $GITHUB_ENV
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Configure Git
      run: |
        git config --global user.name 'elroy-bot'
        git config --global user.email 'noreply@elroy.bot'

    - name: Get version from tag
      id: version
      run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Install dependencies and build
      run: |
        poetry config virtualenvs.create false
        poetry install --no-root
        poetry build

    - name: Run Tests # TMP: until better test isolation
      run: |
        pytest
      env:
        PYTHONWARNINGS: "ignore::DeprecationWarning"
    - name: Test built package
      run: |
        pip install ./dist/elroy-*.whl
        elroy --version
        echo "This is an installation test. Repeat the following text, and only the following text: 'Hello World!'" | elroy | grep -q "Hello World"
        echo "This is an installation test. The secret number is is 3928" | elroy remember
        echo "This is an installation test. What is the secret number? Respond with the secret number and only the secret number" | elroy | grep -q "3928"
        echo "This is an installation test. The secret number is now 2931" > test.txt
        elroy remember < test.txt
        echo "This is an installation test. What is the secret number? Respond with the secret number and only the secret number" > prompt.txt
        elroy < prompt.txt | grep -q "2931"
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        poetry publish --username $TWINE_USERNAME --password $TWINE_PASSWORD --no-interaction


