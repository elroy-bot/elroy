name: Publish Python package

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers the workflow on new version tags

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: ankane/pgvector:v0.5.1
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: elroy
          POSTGRES_USER: elroy
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    environment:
      name: release

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set ELROY_TEST_POSTGRES_URL
      run: |
        echo "ELROY_TEST_POSTGRES_URL=postgresql://elroy:password@localhost:5432/elroy" >> $GITHUB_ENV
    - name: Set up Python 3.11
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
    - name: Add Poetry to PATH
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH
    - name: Install package deps
      run: |
        poetry config virtualenvs.create false
        poetry install --no-root
    - name: Install test dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
    - name: Run Tests
      run: |
        pytest
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        PYTHONWARNINGS: "ignore::DeprecationWarning"

    - name: Build package
      run: poetry build

    - name: Install pipx
      run: |
        python -m pip install --user pipx
        python -m pipx ensurepath

    - name: Install and Test built package
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        ELROY_POSTGRES_URL: postgresql://elroy:password@localhost:5432/elroy
      run: |
        pipx install ./dist/elroy-*.whl --python python3.11
        elroy --version
        echo "This is an installation test. Repeat the following text, and only the following text: 'Hello World!'" | elroy | grep -q "Hello World"

  build:
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    environment:
      name: release

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -

    - name: Add Poetry to PATH
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: poetry install

    - name: Build package
      run: poetry build

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: poetry publish --username $TWINE_USERNAME --password $TWINE_PASSWORD

  docker:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            ELROY_VERSION=${GITHUB_REF_NAME#v}
